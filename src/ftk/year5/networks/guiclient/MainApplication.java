/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ftk.year5.networks.guiclient;

import ftk.year5.networks.guiclient.connection.LGSConnection;
import ftk.year5.networks.guiclient.connection.ServerResponse;
import ftk.year5.networks.guiclient.converters.ConverterInterface;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author andy
 */
public class MainApplication extends javax.swing.JFrame {
    LGSConnection connection;
    /**
     * Creates new form mainApplication
     */
    public MainApplication() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transferModeButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        serverAddressField = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        operationsPanel = new javax.swing.JPanel();
        getVersionButton = new javax.swing.JButton();
        versionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        responsesTextArea = new javax.swing.JTextArea();
        putLineField = new javax.swing.JTextField();
        putLineButton = new javax.swing.JButton();
        calculateStatisticsButtton = new javax.swing.JButton();
        printStatisticsButton = new javax.swing.JButton();
        statisticsNameField = new javax.swing.JTextField();
        saveStatisticsButton = new javax.swing.JButton();
        loadStatisticsButton = new javax.swing.JButton();
        statisticsNameLabel = new javax.swing.JLabel();
        mergeStatisticsButton = new javax.swing.JButton();
        transferModeLabel = new javax.swing.JLabel();
        plainModeRadioButton = new javax.swing.JRadioButton();
        sevenBitModeRadioButton = new javax.swing.JRadioButton();
        base64ModeRadioButton = new javax.swing.JRadioButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        serverAddressField.setText("andrey-linux:18000");

        connectButton.setText("connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        disconnectButton.setText("disconnect");
        disconnectButton.setEnabled(false);
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serverAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(connectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(disconnectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(serverAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(connectButton)
                .addComponent(disconnectButton))
        );

        getVersionButton.setText("get version");
        getVersionButton.setEnabled(false);
        getVersionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getVersionButtonActionPerformed(evt);
            }
        });

        versionLabel.setText("version unknown");
        versionLabel.setEnabled(false);

        responsesTextArea.setColumns(20);
        responsesTextArea.setRows(5);
        responsesTextArea.setEnabled(false);
        jScrollPane1.setViewportView(responsesTextArea);

        putLineField.setToolTipText("");
        putLineField.setEnabled(false);

        putLineButton.setText("put line");
        putLineButton.setEnabled(false);
        putLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                putLineButtonActionPerformed(evt);
            }
        });

        calculateStatisticsButtton.setText("calculate statistics");
        calculateStatisticsButtton.setEnabled(false);
        calculateStatisticsButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateStatisticsButttonActionPerformed(evt);
            }
        });

        printStatisticsButton.setText("print statistics");
        printStatisticsButton.setEnabled(false);
        printStatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printStatisticsButtonActionPerformed(evt);
            }
        });

        statisticsNameField.setText("current");
        statisticsNameField.setEnabled(false);

        saveStatisticsButton.setText("save statistics");
        saveStatisticsButton.setEnabled(false);
        saveStatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStatisticsButtonActionPerformed(evt);
            }
        });

        loadStatisticsButton.setText("load statistics");
        loadStatisticsButton.setEnabled(false);
        loadStatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStatisticsButtonActionPerformed(evt);
            }
        });

        statisticsNameLabel.setText("Statistics name:");
        statisticsNameLabel.setEnabled(false);

        mergeStatisticsButton.setText("merge statistics");
        mergeStatisticsButton.setEnabled(false);
        mergeStatisticsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeStatisticsButtonActionPerformed(evt);
            }
        });

        transferModeLabel.setText("transfer mode:");
        transferModeLabel.setEnabled(false);

        transferModeButtonGroup.add(plainModeRadioButton);
        plainModeRadioButton.setSelected(true);
        plainModeRadioButton.setText("plain mode");
        plainModeRadioButton.setEnabled(false);
        plainModeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainModeRadioButtonActionPerformed(evt);
            }
        });

        transferModeButtonGroup.add(sevenBitModeRadioButton);
        sevenBitModeRadioButton.setText("7bit mode");
        sevenBitModeRadioButton.setEnabled(false);
        sevenBitModeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenBitModeRadioButtonActionPerformed(evt);
            }
        });

        transferModeButtonGroup.add(base64ModeRadioButton);
        base64ModeRadioButton.setText("base64 mode");
        base64ModeRadioButton.setEnabled(false);
        base64ModeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                base64ModeRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout operationsPanelLayout = new javax.swing.GroupLayout(operationsPanel);
        operationsPanel.setLayout(operationsPanelLayout);
        operationsPanelLayout.setHorizontalGroup(
            operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(operationsPanelLayout.createSequentialGroup()
                .addComponent(putLineField)
                .addGap(18, 18, 18)
                .addComponent(putLineButton))
            .addGroup(operationsPanelLayout.createSequentialGroup()
                .addComponent(statisticsNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statisticsNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadStatisticsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveStatisticsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mergeStatisticsButton))
            .addGroup(operationsPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(operationsPanelLayout.createSequentialGroup()
                        .addComponent(transferModeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(plainModeRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sevenBitModeRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(base64ModeRadioButton))
                    .addGroup(operationsPanelLayout.createSequentialGroup()
                        .addComponent(getVersionButton)
                        .addGap(18, 18, 18)
                        .addComponent(versionLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(operationsPanelLayout.createSequentialGroup()
                .addComponent(calculateStatisticsButtton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printStatisticsButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        operationsPanelLayout.setVerticalGroup(
            operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(operationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getVersionButton)
                    .addComponent(versionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transferModeLabel)
                    .addComponent(plainModeRadioButton)
                    .addComponent(sevenBitModeRadioButton)
                    .addComponent(base64ModeRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(putLineField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(putLineButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateStatisticsButtton)
                    .addComponent(printStatisticsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(operationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statisticsNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveStatisticsButton)
                    .addComponent(loadStatisticsButton)
                    .addComponent(statisticsNameLabel)
                    .addComponent(mergeStatisticsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setEnabled(false);
        menuBar.setMinimumSize(new java.awt.Dimension(610, 405));

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(operationsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(operationsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void printResponse(ServerResponse response) {
        if (response.is_multiline) {
            StringBuilder joinedResponse = new StringBuilder();
            for (String line: response.lines) {
                joinedResponse.append(line);
                joinedResponse.append("\n");
            }
            responsesTextArea.setText(joinedResponse.toString());
        } else {
            responsesTextArea.setText(response.line);
        }
    }
    
    private void switchConnectedInterface(boolean isConnected) {
        serverAddressField.setEnabled(!isConnected);
        connectButton.setEnabled(!isConnected);
        disconnectButton.setEnabled(isConnected);
        
        operationsPanel.setEnabled(isConnected);
        
        getVersionButton.setEnabled(isConnected);
        versionLabel.setEnabled(isConnected);
        
        putLineField.setEnabled(isConnected);
        putLineButton.setEnabled(isConnected);
        
        calculateStatisticsButtton.setEnabled(isConnected);
        printStatisticsButton.setEnabled(isConnected);
        
        saveStatisticsButton.setEnabled(isConnected);
        loadStatisticsButton.setEnabled(isConnected);
        mergeStatisticsButton.setEnabled(isConnected);
        
        statisticsNameField.setEnabled(isConnected);
        statisticsNameLabel.setEnabled(isConnected);
        
        responsesTextArea.setEnabled(isConnected);
        
        transferModeLabel.setEnabled(isConnected);
        plainModeRadioButton.setEnabled(isConnected);
        sevenBitModeRadioButton.setEnabled(isConnected);
        base64ModeRadioButton.setEnabled(isConnected);
        
    }
    
    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        try {
            String [] host_and_port = serverAddressField.getText().split(":");
            String host = host_and_port[0];
            int port = Integer.parseInt(host_and_port[1]);
            connection = new LGSConnection(host, port);
            connection.connect();
            ServerResponse response = connection.getResponse();
            if (connection.verificateBannerMessage(response)) {
                printResponse(response);
                switchConnectedInterface(true);
            } else {
                responsesTextArea.setText("Unknown server software!");
            }
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectButtonActionPerformed
        try {
            ServerResponse response = connection.exitCommand();
            printResponse(response);
            connection.disconnect();
            switchConnectedInterface(false);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_disconnectButtonActionPerformed

    private void getVersionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getVersionButtonActionPerformed
        try {
            ServerResponse response = connection.versionCommand();
            versionLabel.setText(response.line);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getVersionButtonActionPerformed

    private void putLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_putLineButtonActionPerformed
        try {
            ServerResponse response = connection.putLineCommand(putLineField.getText());
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_putLineButtonActionPerformed

    private void calculateStatisticsButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateStatisticsButttonActionPerformed
        try {
            ServerResponse response = connection.calculateStatisticsCommand();
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_calculateStatisticsButttonActionPerformed

    private void printStatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printStatisticsButtonActionPerformed
        try {
            ServerResponse response = connection.printStatisticsCommand();
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printStatisticsButtonActionPerformed

    private void loadStatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStatisticsButtonActionPerformed
        try {
            ServerResponse response = connection.loadStatisticsCommand(statisticsNameField.getText());
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadStatisticsButtonActionPerformed

    private void saveStatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStatisticsButtonActionPerformed
        try {
            ServerResponse response = connection.saveStatisticsCommand(statisticsNameField.getText());
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveStatisticsButtonActionPerformed

    private void mergeStatisticsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeStatisticsButtonActionPerformed
        try {
            ServerResponse response = connection.mergeStatisticsCommand(statisticsNameField.getText());
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mergeStatisticsButtonActionPerformed

    private void modeChangeActionPerformed(ConverterInterface.MODE mode) {
        try {
            ServerResponse response = connection.setModeCommand(mode);
            printResponse(response);
        } catch (IOException ex) {
            Logger.getLogger(MainApplication.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
    
    private void plainModeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainModeRadioButtonActionPerformed
        modeChangeActionPerformed(ConverterInterface.MODE.MODE_PLAIN);
    }//GEN-LAST:event_plainModeRadioButtonActionPerformed

    private void sevenBitModeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenBitModeRadioButtonActionPerformed
        modeChangeActionPerformed(ConverterInterface.MODE.MODE_7BITS);
    }//GEN-LAST:event_sevenBitModeRadioButtonActionPerformed

    private void base64ModeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_base64ModeRadioButtonActionPerformed
        modeChangeActionPerformed(ConverterInterface.MODE.MODE_BASE64);
    }//GEN-LAST:event_base64ModeRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JRadioButton base64ModeRadioButton;
    private javax.swing.JButton calculateStatisticsButtton;
    private javax.swing.JButton connectButton;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton getVersionButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadStatisticsButton;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton mergeStatisticsButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel operationsPanel;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JRadioButton plainModeRadioButton;
    private javax.swing.JButton printStatisticsButton;
    private javax.swing.JButton putLineButton;
    private javax.swing.JTextField putLineField;
    private javax.swing.JTextArea responsesTextArea;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton saveStatisticsButton;
    private javax.swing.JTextField serverAddressField;
    private javax.swing.JRadioButton sevenBitModeRadioButton;
    private javax.swing.JTextField statisticsNameField;
    private javax.swing.JLabel statisticsNameLabel;
    private javax.swing.ButtonGroup transferModeButtonGroup;
    private javax.swing.JLabel transferModeLabel;
    private javax.swing.JLabel versionLabel;
    // End of variables declaration//GEN-END:variables

}
